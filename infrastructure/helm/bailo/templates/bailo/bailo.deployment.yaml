---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "bailo.fullname" . }}-backend
  labels:
    {{- include "bailo.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      name: backend
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        name: backend
    spec:
      serviceAccountName: {{ include "bailo.fullname" .  }}-builder
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ include "bailo.fullname" . }}-backend
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.backendRepository }}:{{ .Values.image.backendTag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "bailo.fullname" . }}-minio
                  key: root-user
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "bailo.fullname" . }}-minio
                  key: root-password
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "bailo.fullname" . }}-mongodb
                  key: mongodb-passwords
            - name: MONGO_CONNECTION_URI
              value: 'mongodb://{{ index .Values.mongodb.auth.usernames 0 }}:{{ index .Values.mongodb.auth.passwords 0 }}@{{ include "bailo.mongo.host" . }}'
          ports:
            - name: http
              containerPort: {{ .Values.service.backendPort }}
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: {{ .Values.service.backendPort }}
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: {{ .Values.service.backendPort }}
            initialDelaySeconds: 15
            periodSeconds: 20
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /app/config/production.cjs
              subPath: production.cjs
            - name: config
              mountPath: /app/config/custom-environment-variables.cjs
              subPath: custom-environment-variables.cjs
            - name: temp
              mountPath: /tmp
            - name: certs
              mountPath: /app/certs/cert.pem
              subPath: cert.pem
            - name: certs
              mountPath: /app/certs/key.pem
              subPath: key.pem
            - name: certs
              mountPath: /usr/local/share/ca-certificates/cert.pem 
              subPath: cert.pem
            - name: stroom
              mountPath: /app/logs
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "bailo.fullname" . }}-config
            items:
              - key: production.cjs
                path: production.cjs
              - key: custom-environment-variables.cjs
                path: custom-environment-variables.cjs
        - name: certs
          secret:
            secretName: {{ include "bailo.fullname" . }}-certs
            items:
              - key: cert.pem
                path: cert.pem
              - key: key.pem
                path: key.pem
        - name: temp
          emptyDir: {}
        - name: stroom
          emptyDir: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "bailo.fullname" . }}-frontend
  labels:
    {{- include "bailo.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      name: frontend
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        name: frontend
    spec:
      #serviceAccountName: {{ include "bailo.fullname" . }}-builder
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ include "bailo.fullname" . }}-frontend
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.frontendRepository }}:{{ .Values.image.frontendTag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.frontendPort }}
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: {{ .Values.service.frontendPort }}
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: {{ .Values.service.frontendPort }}
            initialDelaySeconds: 15
            periodSeconds: 20
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
