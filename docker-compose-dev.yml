version: '3.9'
services:
  mongo:
    image: mongo:5.0.6
    ports:
      - '27017:27017'
    volumes:
      - mongoVolume:/data/db
    command: --quiet

  minio:
    image: minio/minio:RELEASE.2022-04-01T03-41-39Z
    ports:
      - '9000:9000'
      - '9001:9001'
    command: server /data --console-address ":9001"
    volumes:
      - minioVolume:/data

  redis:
    image: redis:6.2-alpine
    ports:
      - '6379:6379'
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - redisVolume:/data

  registry:
    restart: always
    image: registry:2.8.1
    ports:
      - 5000:5000
    environment:
      REGISTRY_HTTP_TLS_CERTIFICATE: /certs/cert.pem
      REGISTRY_HTTP_TLS_KEY: /certs/key.pem

      REGISTRY_STORAGE_S3_ACCESSKEY: minioadmin
      REGISTRY_STORAGE_S3_SECRETKEY: minioadmin

      REGISTRY_AUTH: token
      #REGISTRY_AUTH_TOKEN_REALM: http://host.docker.internal:3000/api/v1/registry_auth
      REGISTRY_AUTH_TOKEN_REALM: http://app:3000/api/v1/registry_auth
      REGISTRY_AUTH_TOKEN_SERVICE: RegistryAuth
      REGISTRY_AUTH_TOKEN_ISSUER: RegistryIssuer
      REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE: /certs/cert.pem
    volumes:
      - ./config/registry.conf:/etc/docker/registry/config.yml
      - ./certs:/certs

  nginx:
    image: nginx:1.21.6-alpine
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:8080
    depends_on:
      - app

  maildev:
    image: maildev/maildev:2.0.2
    ports:
      - '1080:1080'
      - '1025:1025'
    environment:
      MAILDEV_INCOMING_USER: mailuser
      MAILDEV_INCOMING_PASS: mailpass

  app:
    build:
      args:
        # set to your uid (get by running `id` or `echo ${UID}`)
        # We do this so that you can mount the app directory into the container
        # and the container user can access the files (and populate node_modules via npm install)
        # This is only for developer convenience so that changes on host files are immediately
        # reflected in the running app
        - user_id=REPLACE_WITH_UID
      context: .
      dockerfile: Dockerfile.dev
    #network_mode: "host"
    volumes:
      # cert location assumed by registryAuth.ts
      - ./certs:/home/user/app/certs
      # put public key into location to be added to system trusted CA
      # (only needed for self-signed certs)
      - ./certs/cert.pem:/usr/local/share/ca-certificates/bailo.pem
      - ./:/home/user/app
    ports:
      - '3000:3000'
    depends_on:
      - mongo
      - minio
      - redis
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    environment:
      - NODE_CONFIG_ENV=docker_compose
      # if set, run script to set the schemas on startup
      - SCHEMA_SETUP_SCRIPT=server/scripts/exampleSetAllSchemas.ts

volumes:
  minioVolume:
  redisVolume:
  mongoVolume:
