---
version: '3.9'
services:
  mongo:
    restart: unless-stopped
    image: mongo:5.0.6
    ports:
      - '27017:27017'
    volumes:
      - mongoVolume:/data/db
    command: --quiet

  docker-host:
    image: qoomon/docker-host:3.0.5
    cap_add: ['NET_ADMIN', 'NET_RAW']
    mem_limit: 8M
    restart: on-failure

  minio:
    restart: unless-stopped
    image: minio/minio:RELEASE.2022-04-01T03-41-39Z
    ports:
      - '9000:9000'
      - '9001:9001'
    command: server /data --console-address ":9001"
    volumes:
      - minioVolume:/data

  registry:
    restart: unless-stopped
    image: registry:2.8.1
    ports:
      - 5000:5000
    environment:
      REGISTRY_HTTP_TLS_CERTIFICATE: /certs/cert.pem
      REGISTRY_HTTP_TLS_KEY: /certs/key.pem

      # REGISTRY_STORAGE_S3_ACCESSKEY: minioadmin
      # REGISTRY_STORAGE_S3_SECRETKEY: minioadmin

      REGISTRY_AUTH: token
      #REGISTRY_AUTH_TOKEN_REALM: http://host.docker.internal:3000/api/v1/registry_auth
      REGISTRY_AUTH_TOKEN_REALM: http://app:3000/api/v1/registry_auth
      REGISTRY_AUTH_TOKEN_SERVICE: RegistryAuth
      REGISTRY_AUTH_TOKEN_ISSUER: RegistryIssuer
      REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE: /certs/cert.pem
    volumes:
      - ./config/registry.conf:/etc/docker/registry/config.yml
      - ./certs:/certs

  nginx:
    restart: unless-stopped
    image: nginx:1.21.6-alpine
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/certs:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    depends_on:
      - app

  certbot:
    restart: unless-stopped
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  ouath2-proxy:
    restart: unless-stopped
    image: bitnami/oauth2-proxy
    ports:
      - 4180:4180
    environment:
      OAUTH2_PROXY_HTTP_ADDRESS: <instert creds>
      OAUTH2_PROXY_CLIENT_ID: <instert creds>
      OAUTH2_PROXY_CLIENT_SECRET: <instert creds>
      OAUTH2_PROXY_COOKIE_NAME: <instert creds>
      OAUTH2_PROXY_COOKIE_SECRET: <instert creds>
      OAUTH2_PROXY_EXPIRE: 12h
      OAUTH2_PROXY_SECURE: "true"
      OAUTH2_PROXY_HTTPONLY: "true"
      OAUTH2_PROXY_EMAIL_DOMAINS: 'ncsu.edu'
      OAUTH2_PROXY_SET_XAUTHREQUEST: "true"
    depends_on:
      - nginx


  maildev:
    restart: unless-stopped
    image: maildev/maildev:2.0.2
    ports:
      - '1080:1080'
      - '1025:1025'
    environment:
      MAILDEV_INCOMING_USER: mailuser
      MAILDEV_INCOMING_PASS: mailpass

  app:
    restart: unless-stopped
    image: bailo:latest
    build:
      context: .
      dockerfile: Dockerfile.prod
    #network_mode: "host"
    volumes:
      # cert location assumed by registryAuth.ts
      - ./certs:/app/certs
      # put public key into location to be added to system trusted CA
      # (only needed for self-signed certs)
      - ./certs/cert.pem:/usr/local/share/ca-certificates/bailo.pem
    ports:
      - '3000:3000'
    depends_on:
      - mongo
      - minio
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    environment:
      - NODE_CONFIG_ENV=docker_compose_prod
      # - SCHEMA_SETUP_SCRIPT=dist/server/scripts/exampleSetAllSchemas.js

volumes:
  minioVolume:
  mongoVolume:
