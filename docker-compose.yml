version: "3.9"
services:
  mongo:
    restart: unless-stopped
    image: mongo:6.0.4
    ports:
      - 27017:27017
    volumes:
      - mongoVolume:/data/db
    command: --quiet

  minio:
    restart: unless-stopped
    image: minio/minio:RELEASE.2023-01-31T02-24-19Z
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - minioVolume:/data
    command: server /data --console-address ":9001"

  mailcrab:
    image: marlonb/mailcrab:v0.10.0
    ports:
      - 1080:1080
      - 1025:1025

  nginx:
    image: nginx:1.21.6-alpine
    volumes:
      - ./infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 8080:8080
    depends_on:
      - frontend
      - backend
      - registry

  registry:
    restart: unless-stopped
    image: registry:2.8.1
    ports:
      - 5000:5000
    environment:
      REGISTRY_HTTP_TLS_CERTIFICATE: /certs/cert.pem
      REGISTRY_HTTP_TLS_KEY: /certs/key.pem

      # REGISTRY_STORAGE_S3_ACCESSKEY: minioadmin
      # REGISTRY_STORAGE_S3_SECRETKEY: minioadmin

      REGISTRY_AUTH: token
      REGISTRY_AUTH_TOKEN_REALM: http://backend:3001/api/v1/registry_auth
      REGISTRY_AUTH_TOKEN_SERVICE: RegistryAuth
      REGISTRY_AUTH_TOKEN_ISSUER: RegistryIssuer
      REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE: /certs/cert.pem
    volumes:
      - ./backend/config/registry.conf:/etc/docker/registry/config.yml
      - ./backend/certs:/certs

  frontend:
    restart: unless-stopped
    build:
      context: ./frontend/
      dockerfile: ./Dockerfile.dev
    volumes:
      - ./frontend:/app
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot
    depends_on:
      - backend

  certbot:
    restart: unless-stopped
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  ouath2-proxy:
    restart: unless-stopped
    image: bitnami/oauth2-proxy
    ports:
      - 4180:4180
    environment:
      OAUTH2_PROXY_HTTP_ADDRESS: <instert creds>
      OAUTH2_PROXY_CLIENT_ID: <instert creds>
      OAUTH2_PROXY_CLIENT_SECRET: <instert creds>
      OAUTH2_PROXY_COOKIE_NAME: <instert creds>
      OAUTH2_PROXY_COOKIE_SECRET: <instert creds>
      OAUTH2_PROXY_EXPIRE: 12h
      OAUTH2_PROXY_SECURE: "true"
      OAUTH2_PROXY_HTTPONLY: "true"
      OAUTH2_PROXY_EMAIL_DOMAINS: "ncsu.edu"
      OAUTH2_PROXY_SET_XAUTHREQUEST: "true"
    depends_on:
      - nginx

  maildev:
    restart: unless-stopped
    image: maildev/maildev:2.0.2
    ports:
      - 3000:3000

  backend:
    restart: unless-stopped
    image: bailo:latest
    build:
      context: ./backend/
      dockerfile: ./Dockerfile.dev
    volumes:
      - ./backend:/app
      - ./backend/certs:/certs
      - ./backend/certs:/usr/local/share/ca-certificates
    ports:
      - 3001:3001
      - 9229:9229
    depends_on:
      - mongo
      - minio
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    environment:
      - NODE_CONFIG_ENV=docker_compose_prod
      # - SCHEMA_SETUP_SCRIPT=dist/server/scripts/exampleSetAllSchemas.js

volumes:
  minioVolume:
  mongoVolume:
